//Arduboy test

#include <Arduboy2.h>
#include <ArduboyTones.h>

Arduboy2 arduboy;
ArduboyTones sound(arduboy.audio.enabled);
  
const uint16_t cenaMusic[] PROGMEM = {
  NOTE_D4,300, NOTE_REST,20, NOTE_E4,150, NOTE_REST,20, NOTE_C4,300, NOTE_REST,20, NOTE_D4,700,
  NOTE_REST,1500, NOTE_F4,300, NOTE_REST,20, NOTE_E4,150, NOTE_REST,20, NOTE_C4,300, NOTE_REST,20, NOTE_D4,800,
  NOTE_REST,1000, 
  NOTE_REST,500, NOTE_D4,300, NOTE_REST,20, NOTE_E4,150, NOTE_REST,20, NOTE_C4,300, NOTE_REST,20, NOTE_D4,700,
  NOTE_REST,1500, NOTE_F4,300, NOTE_REST,20, NOTE_E4,150, NOTE_REST,20, NOTE_C4,300, NOTE_REST,20, NOTE_D4,800,
  NOTE_REST,1000, TONES_END
};

const uint16_t cenaMusicShort[] PROGMEM = {
  NOTE_REST,600, NOTE_D4,300, NOTE_REST,20, NOTE_E4,150, NOTE_REST,20, NOTE_C4,300, NOTE_REST,20, NOTE_D4,700,
  NOTE_REST,1500, NOTE_F4,300, NOTE_REST,20, NOTE_E4,150, NOTE_REST,20, NOTE_C4,300, NOTE_REST,20, NOTE_D4,800,
  TONES_END
};

const unsigned char PROGMEM CenaFaceSprite[] =
{
// width, height,
128, 64,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc0, 0x00, 0x00, 0x80, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0xfa, 0x03, 0x82, 0x0a, 0xc3, 0xb1, 0x87, 0xfc, 0x92, 0xa2, 0xff, 0xc1, 0x9c, 0xe5, 0x87, 0xfb, 0x82, 0x9b, 0xf1, 0x81, 0xe3, 0xb2, 0x8e, 0xe3, 0xf8, 0xef, 0x91, 0x9d, 0x27, 0x31, 0x8c, 0x42, 0x78, 0x47, 0x39, 0xf5, 0x10, 0xc7, 0x38, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x40, 0xc0, 0xc0, 0xc0, 0xc0, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x18, 0x0f, 0x01, 0x00, 0x20, 0x20, 0x20, 0x20, 0x40, 0x40, 0x40, 0xc0, 0x81, 0x80, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x81, 0xc0, 0x40, 0x40, 0x40, 0x40, 0x61, 0x21, 0x21, 0x21, 0x21, 0x21, 0x13, 0x03, 0x04, 0xff, 0x84, 0x83, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0xff, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x01, 0x41, 0x67, 0xff, 0x00, 0x00, 0x10, 0x28, 0x28, 0x44, 0x44, 0x7c, 0x7c, 0x54, 0x44, 0x44, 0x28, 0x28, 0x01, 0xf3, 0x00, 0x00, 0x80, 0xe1, 0x09, 0x14, 0x22, 0x22, 0x22, 0x3e, 0x3e, 0x26, 0x22, 0x22, 0x14, 0x08, 0x00, 0x00, 0x00, 0xff, 0x0c, 0x38, 0x00, 0xe1, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x81, 0xff, 0xff, 0xff, 0xff, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x30, 0x1c, 0x03, 0x01, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x0f, 0x08, 0x08, 0x04, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x7f, 0x00, 0x00, 0x7f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x04, 0x04, 0x06, 0x07, 0x04, 0x04, 0x04, 0x04, 0x04, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x80, 0x80, 0x80, 0x80, 0xff, 0xff, 0xff, 0xff, 0x83, 0x0c, 0x08, 0x30, 0x20, 0x40, 0x80, 
0xe0, 0x20, 0x1c, 0x02, 0xff, 0xff, 0xff, 0xff, 0x02, 0x02, 0x02, 0x02, 0x02, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x04, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x02, 0x06, 0x0c, 0x00, 0x00, 0x80, 0xc0, 0xe0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x08, 0x08, 0x08, 0x08, 0x08, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x03, 0x0c, 0x30, 0xc0, 0x00, 0x00, 0x00, 
0x00, 0x00, 0xf8, 0x04, 0xff, 0xff, 0xff, 0xff, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x20, 0x20, 0x20, 0x20, 0x27, 0x38, 0x30, 0x20, 0xc0, 0x80, 0x80, 0x80, 0x80, 0x80, 0x8c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x86, 0x87, 0x83, 0x83, 0x81, 0x81, 0x80, 0x80, 0x80, 0x40, 0x38, 0x48, 0x48, 0x4f, 0x40, 0x40, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x04, 0x04, 0x04, 0x04, 0x04, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x0f, 0x10, 0x20, 0x40, 
0x02, 0x01, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xc0, 0x60, 0x20, 0x10, 0x10, 0x08, 0x08, 0x08, 0x04, 0x04, 0x04, 0x04, 0x08, 0x08, 0x08, 0x10, 0x10, 0x20, 0x20, 0xe0, 0x30, 0x18, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x08, 0x78, 0xc0, 0x40, 0x40, 0x20, 0x20, 0x10, 0x18, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x10, 0x10, 0x10, 0x10, 0x10, 0x20, 0x40, 0x40, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x06, 0x08, 0x08, 0x10, 0x10, 0x60, 
};

const unsigned char PROGMEM CenaHandSprite[] =
{
// width, height,
32, 48,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x98, 0x98, 0xe0, 0x00, 0xc0, 0x3c, 0x04, 0x3a, 0xa6, 0xfc, 0x00, 0x00, 0x80, 0x60, 0xf0, 0x10, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0xff, 0x0d, 0x89, 0x4e, 0x78, 0xc0, 0x7f, 0x00, 0x08, 0xff, 0xc0, 0x7f, 0x00, 0x08, 0xe8, 0x3f, 0x80, 0x70, 0x1e, 0xc1, 0x80, 0xfc, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x03, 0xfc, 0x00, 0x00, 0x00, 0x03, 0x30, 0x00, 0x00, 0x01, 0x0d, 0x00, 0x00, 0x00, 0xe7, 0x03, 0x01, 0x00, 0xe0, 0x38, 0x0f, 0xf1, 0x08, 0x1c, 0x7c, 0xc4, 0xf8, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x01, 0x3f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x04, 0x06, 0x03, 0x80, 0x66, 0x38, 0x0e, 0x03, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x10, 0x0f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};

const unsigned char PROGMEM CenaHandMask[] =
{
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xf8, 0xf8, 0xe0, 0x00, 0xc0, 0xfc, 0xfc, 0xfe, 0xfe, 0xfc, 0x00, 0x00, 0x80, 0xe0, 0xf0, 0xf0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xfe, 0xf8, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0x3f, 0x80, 0xf0, 0xfe, 0xff, 0xff, 0xff, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0x0f, 0xf1, 0xf8, 0xfc, 0xfc, 0xfc, 0xf8, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x01, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xfe, 0xff, 0xff, 0x7f, 0x3f, 0x0f, 0x03, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x0f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};



int gameScreen = 0;
bool AButtonPressed = false;
bool BButtonPressed = false;
bool UpButtonPressed = false;
bool DownButtonPressed = false;
bool LeftButtonPressed = false;
bool RightButtonPressed = false;

int cursorX = 62;
int cursorY = 10;
int cursorSize = 4;
int cursorMoveHor = 0;
int cursorMoveVer = 0;

int cenaX = 0;
int cenaY = 0;
int cenaSize = 30;
int handPos = 1;

String difficultyName = "normal";
float difficultyValue = 1.0;


void setup() {
  arduboy.begin();
  arduboy.setFrameRate(60);
  sound.tones(cenaMusicShort); 
  arduboy.clear();
  arduboy.audio.on();
}

void loop() {
  if(!arduboy.nextFrame()) {
    return; 
  }

  arduboy.clear();
  
  switch( gameScreen ) {
    case 0:
      //Press Start Screen
      arduboy.setCursor(0, 0);
      arduboy.println();
      arduboy.println("    Finding Cena");
      arduboy.println("  (The video game)");
      arduboy.println("----------------------");
      arduboy.println("'A' to start");
      arduboy.println("'B' for difficulty");
      arduboy.println();
      arduboy.println("Difficulty: " + difficultyName);

      if(arduboy.pressed(DOWN_BUTTON)) {
        DownButtonPressed = true;
        gameScreen = 2;
      }

      if(arduboy.pressed(A_BUTTON) and AButtonPressed == false) {
        AButtonPressed = true;
        randomSeed(millis());
        cenaX = random(0,98);
        cenaY = random(0,34);        
        gameScreen = 1;
      }
      else if(arduboy.pressed(B_BUTTON) and BButtonPressed == false)
      {
         BButtonPressed = true;
         if(difficultyName=="normal") { difficultyName="easy"; difficultyValue = 2.0;} 
         else if(difficultyName=="easy") { difficultyName="hard"; difficultyValue = 0.5;}
         else if(difficultyName=="hard") { difficultyName="normal"; difficultyValue = 1.0;}
      }
      break;
      
    case 1:
      //Game Screen
      arduboy.setCursor(0, 0);
      arduboy.fillRect(cursorX, cursorY, cursorSize, cursorSize, WHITE);
      
      if(arduboy.pressed(UP_BUTTON)) {
        UpButtonPressed = true;
        cursorY = cursorY - 1;
        if(cursorY<0){
          cursorY=0;
        }
      }
      if(arduboy.pressed(DOWN_BUTTON)) {
        DownButtonPressed = true;
        cursorY = cursorY + 1;
        if(cursorY>60){
          cursorY=60;
        }
      }
      if(arduboy.pressed(LEFT_BUTTON)) {
        LeftButtonPressed = true;
        cursorX = cursorX - 1;
        if(cursorX<0){
          cursorX=0;
        }
      }
      if(arduboy.pressed(RIGHT_BUTTON)) {
        RightButtonPressed = true;
        cursorX = cursorX + 1;
        if(cursorX>124){
          cursorX=124;
        }
      }
      if(arduboy.pressed(A_BUTTON) and AButtonPressed == false) {
        AButtonPressed = true;
        if(cursorX>cenaX and cursorX<(cenaX+(cenaSize*difficultyValue)) and cursorY>cenaY and cursorY<(cenaY+(cenaSize*difficultyValue))){
          sound.tones(cenaMusic); 
          gameScreen = 2;
        }
      }
      if(arduboy.pressed(B_BUTTON) and BButtonPressed == false) {
        BButtonPressed = true;
        gameScreen = 0;
      }
      break;
    
    case 2:
      //Found Cena Screen
       arduboy.setCursor(0, 0);
       if (arduboy.everyXFrames(15)) {
        switch(handPos){
        case 1:
          handPos = 2;
          break;
        case 2:
          handPos = 3;
          break;
        case 3:
        handPos=4;
        break;
        case 4:
        handPos=1;
        break;
        default:
        handPos = 1;
        break;
        }
        
       }

  
       Sprites::drawOverwrite(0, 0, CenaFaceSprite, 0);
       if(handPos==4||handPos==2) {Sprites::drawExternalMask(48,16, CenaHandSprite, CenaHandMask,0,0);}
       else if(handPos==1) {Sprites::drawExternalMask(56,15, CenaHandSprite, CenaHandMask,0,0);}
       else if(handPos==3) {Sprites::drawExternalMask(40,15, CenaHandSprite, CenaHandMask,0,0);}
       if(arduboy.pressed(A_BUTTON) and AButtonPressed == false) {
        AButtonPressed = true;
        gameScreen = 0;
      }
      break;
    
    default:
      //Error State Screen - remove if memory becomes and issue
      arduboy.setCursor(0, 0);
      arduboy.print("How did you reach this?!");  
      if(arduboy.pressed(A_BUTTON) and AButtonPressed == false) {
        AButtonPressed = true;
        gameScreen = 0;
      }
  }
  arduboy.display();
  
  if(arduboy.notPressed(A_BUTTON)) {
    AButtonPressed = false;
  }
  if(arduboy.notPressed(B_BUTTON)) {
    BButtonPressed = false;
  }  
  if(arduboy.notPressed(UP_BUTTON)) {
    UpButtonPressed = false;
  }  
  if(arduboy.notPressed(DOWN_BUTTON)) {
    DownButtonPressed = false;
  }  
  if(arduboy.notPressed(LEFT_BUTTON)) {
    LeftButtonPressed = false;
  }
  if(arduboy.notPressed(RIGHT_BUTTON)) {
    RightButtonPressed = false;
  }
}
